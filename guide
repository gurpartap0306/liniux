//to stop GUI
$ sudo systemct1 stop gdm(or sudo telinit 3)

//to restart it 
$ sudo systemct1 start gdm(or sudo telinit 5)


//modifying the command line prompt

student@quad32 $
This could prove useful if you are working in multiple roles and want to be always reminded of who you are and what machine you are on. The prompt above could be implemented by setting the PS1 variable to: \u@\h \$.
For example:
$ echo $PS1
\$
$ PS1="\u@\h \$ "
coop@quad64 $ echo $PS1
\u@\h \$
coop@quad64 $ 

//input output redirection
$ do_something < input-file : < is used to take input
$ do_something > output-file : > is used for output
$ do_something 2> error-file : 2> is used to store error message in file


//pipes
$ command1 | command2 | command3 : these commands will execute in sequence


//wildcards and matching file names
You can search for a filename containing specific characters using wildcards.

Wildcard 	Result
?  	Matches any single character
* 	Matches any string of characters
[set] 	Matches any character in the set of characters, for example [adf] will match any occurrence of "a", "d", or "f"
[!set] 	Matches any character not in the set of characters


// using find
Searching for files and directories named gcc:
$ find /usr -name gcc

Searching only for directories named gcc:
$ find /usr -type d -name gcc

Searching only for regular files named gcc:
$ find /usr -type f -name gcc

To find and remove all files that end with .swp: 
$ find -name "*.swp" -exec rm {} ’;’

To find files based on time:
$ find / -ctime 3 

Here, -ctime is when the inode metadata (i.e. file ownership, permissions, etc.) last changed; it is often, but not necessarily, when the file was first created. You can also search for accessed/last read (-atime) or modified/last written (-mtime) times. The number is the number of days and can be expressed as either a number (n) that means exactly that value, +n, which means greater than that number, or -n, which means less than that number. There are similar options for times in minutes (as in -cmin, -amin, and -mmin).

To find files based on sizes:
$ find / -size 0
